name: CI
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: read
  deployments: write
jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install tools from asdf config
        uses: ai/asdf-cache-action@v1
      - name: Install all dependencies
        run: pnpm install --frozen-lockfile
      - name: Build and test
        run: pnpm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - test
    steps:
      - name: Notify about new deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install tools from asdf config
        uses: ai/asdf-cache-action@v1
        with:
          dependencies-cache: production
      # - name: Cache location
      #   continue-on-error: true
      #   uses: actions/cache@v3
      #   with:
      #     path: ./scripts/location/
      #     key: location
      - name: Install build dependencies
        run: pnpm install --frozen-lockfile --production --ignore-scripts
      #- name: Update location
      #  run: ./scripts/update-location.js
      #  env:
      #    GMAPS_TOKEN: ${{ secrets.GMAPS_TOKEN }}
      - name: Build static files
        run: pnpm build
      - name: Check files changes
        id: hash
        run: ./node_modules/.bin/ssdeploy changed
        env:
          WEBSITE_URL: ${{ secrets.WEBSITE_URL }}
      - name: Auth Google Cloud
        if: "!steps.hash.outputs.noChanges"
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}
      - name: Install Google Cloud
        if: "!steps.hash.outputs.noChanges"
        uses: google-github-actions/setup-gcloud@v1
      - name: Deploy files
        if: "!steps.hash.outputs.noChanges"
        run: ./node_modules/.bin/ssdeploy deploy --verbose
        env:
          GCLOUD_APP: ${{ secrets.GCLOUD_APP }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          ref: ${{ github.ref }}
          env: ${{ steps.deployment.outputs.env }}
          env_url: ${{ secrets.WEBSITE_URL }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
